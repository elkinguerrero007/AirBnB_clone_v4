exit()
import boto3
exit()
import boto3
exit()
import boto3
s3 = boto3.resource('s3')
for bucket in s3.buckets.all():
print(bucket.name)
import boto3
for bucket in s3.buckets.all():
	print(bucket.name)	
exit()
import MySQLdb
MySQLdb.version_info 
exit()
 import sqlalchemy
import sqlalchemy
sqlalchemy.__version__
exit()
import MySQLdb
exit
exit()
import MySQLdb
MySQLdb.version_info 
exit()
import MySQLdb
exit()
import MySQLdb
MySQLdb.version_info 
exit
exit()
import MySQLdb
MySQLdb.version_info 
sudo pip3 install SQLAlchemy
python3
exit()
import sqlalchemy
sqlalchemy.__version__
exit()
import MySQLdb
MySQLdb.version_info 
import sqlalchemy
sqlalchemy.__version__ 
exit()
import MySQLdb
MySQLdb.version_info 
exit
exit()
import sqlalchemy
 sqlalchemy.__version__ 
sqlalchemy.__version__
exit()
import this
exit()
for i in range(0,99)
for i in range(0,99):
print(i)
	print(i)
for i in range(0,99):
    print(i)
exit()
from models import storage
from models.state import State
exit()
from models import storage
exit()
from models import storage
from models.state import State
 len(storage.all(State))
exit()
from models import storage
exit()
from models import storage
exit()
from models import storage
exit()
from models import storage
exit()
from models import storage
exit()
from models import storage
exit
exit()
from models import storage
exit()
from models import storage
exit()
from models import storage
exit()
 from models import storage
from models import storage
from models.state import State
len(storage.all(State))
 len(storage.all(State))
len(storage.all(State))
	len(storage.all(State))
len(storage.all(State))
exit()
from models import storage
from models.state import State
len(storage.all(State))
exit()
from models import storage
from models.state import State
len(storage.all(State))
exit()
from models import storage
from models.state import State
exit()
from models import storage
exit()
 from models import storage
from models import storage
exit()
from models import storage
from models.state import State
len(storage.all(State))
exit()
from models import storage
exit()
from models import storage
clear
exit()
from models import storage
exit()
from models import storage
exit()
from models import storage
exit()
from models import storage
clear
exit()
from models import storage
exit()
from models import storage
from models.state import State
len(storage.all(State))
exit()
from models import storage
from models.state import State
len(storage.all(State))
 len(storage.all(State))
len(storage.all(State))
storage.close()
len(storage.all(State))
exit()
campos = [1,2,3,4]
torres = [1,4]
max_dist = []
def dist(self, a, b):
from models import storage
exit()
from models import storage
exit()
 from models import storage
from models import storage
exit()
 from models import storage
from models import storage
exit()
from models import storage
exit()
django.VERSION
import django
exit()
import django
exit
exit()
